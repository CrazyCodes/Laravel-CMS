<?php
    
    namespace App\Admin\Controllers;
    
    use App\Admin\Action\CreateUser;
    use App\Admin\Actions\Get\Member;
    use App\Admin\Extensions\UserExporter;
    use App\Models\CityPackage;
    use App\Models\Industry;
    use App\Models\User;
    use App\UserSign;
    use Encore\Admin\Controllers\AdminController;
    use Encore\Admin\Form;
    use Encore\Admin\Grid;
    use Encore\Admin\Grid\Row;
    use Encore\Admin\Layout\Content;
    use Encore\Admin\Show;
    use Encore\Admin\Widgets\Table;
    
    class UserTeamController extends AdminController
    {
        /**
         * Title for current resource.
         *
         * @var string
         */
        protected $title = '团队报名';
        
        public function index(Content $content)
        {
            $content->breadcrumb(
                ['text' => '团队报名']
            );
            
            return parent::index($content); // TODO: Change the autogenerated stub
        }
        
        public function create(Content $content)
        {
            $content->breadcrumb(
                ['text' => '团队报名'],
                ['text' => '创建', 'url' => '/users']
            );
            
            return parent::create($content); // TODO: Change the autogenerated stub
        }
        
        public function edit($id, Content $content)
        {
            $content->breadcrumb(
                ['text' => '团队报名'],
                ['text' => '更新', 'url' => '/users']
            );
            
            return parent::edit($id, $content); // TODO: Change the autogenerated stub
        }
        
        /**
         * Make a grid builder.
         *
         * @return Grid
         */
        protected function grid()
        {
            $grid = new Grid(new User);
            $grid->expandFilter();
            $grid->filter(function ($filter) {
                $filter->disableIdFilter();
                
                $filter->column(1 / 2, function ($filter) {
                    $filter->like('tel', '手机号码');
                });
                
                $filter->column(1 / 2, function ($filter) {
                    $filter->like('id', '入场编码');
                });
                $filter->column(1 / 2, function ($filter) {
                    $filter->between('created_at', '报名日期')->date();
                });
                
            });
            
            $grid->model()->where('channel', 1);
            $grid->model()->where('invite_code', 0);
            $grid->exporter(new UserExporter());
            $grid->column('id', __('编码'))->qrcode();
            $grid->column('tel', __('手机号'))->modal('团员列表', function ($model) {
                $comments = $model->select('id', 'tel', 'email', 'surname', 'name', 'company', 'section',
                    'position')->where('invite_code', $model->id)->get();
                
                return new Table(['编码', '手机号', '邮箱', '姓', '名字', '公司', '部门', '职位'], $comments->toArray());
            });
            $grid->column('count', '团员/人数')->display(function () {
                return User::where('invite_code', $this->id)->count();
            });
            $grid->column('surname', '姓');
            $grid->column('name', '名');
            $grid->column('sex', '称谓')->display(function ($sex) {
                return $sex == 0 ? '先生' : '女士';
            });
            $grid->column('company', '公司');
            $grid->column('section', '部门')->hide();
            $grid->column('position', '职位')->hide();
            $grid->column('land_line', '座机电话')->hide();
            $grid->column('fax', '传真号')->hide();
            $grid->column('email', '邮箱');
            $grid->column('created_at', __('报名时间'));
            
            return $grid;
        }
        
        /**
         * Make a show builder.
         *
         * @param mixed $id
         *
         * @return Show
         */
        protected function detail($id)
        {
            $show = new Show(User::findOrFail($id));
            $show->field('id', __('编码'));
            $show->field('tel', __('手机号码'));
            $show->field('surname', __('姓'));
            $show->field('name', __('名'));
            $show->field('sex', __('称谓'))->using(['0' => '先生', '1' => '女士']);
            $show->field('company', __('公司名称'));
            $show->field('section', __('部门'));
            $show->field('position', __('职位'));
            $show->field('prov_name', __('省名称'));
            $show->field('city_name', __('市名称'));
            $show->field('area_name', __('区名称'));
            
            $show->field('address', __('详细地址'));
            $show->field('zip_code', __('邮编'));
            $show->field('land_line', __('座机电话'));
            $show->field('fax', __('传真号'));
            $show->field('email', __('邮箱'));
            $show->field('website', __('公司网址'));
//            $show->field('data', __('报名信息'))->json();
//            $show->field('data', __('报名信息'))->unescape()->as(function ($data){
//                return json_decode($data)->surname;
//            });
            $show->field('data', '调查问卷')->unescape()->as(function ($data) {
                $data = json_decode($data);
                
                return '所属行业:' . $data->industry . '-' . $data->industry_option . '<br/>';
            });
            
            $show->divider();
            $show->field('created_at', __('报名时间'));
            $show->field('updated_at', __('更新时间'));
            
            return $show;
        }
        
        public function creates()
        {
            (new CreateUser())->execute(request()->all());
            
            return redirect('/admin/users');
        }
        
        /**
         * Make a form builder.
         *
         * @return Form
         */
        protected function form()
        {
            $form = new Form(new User);

//            $form->setAction('/admin/users/creates');
            $form->tab('基本信息', function ($form) {
                $form->select('invite_code', '选择团长')->options(User::selectShow());
                $form->mobile('tel', __('手机号码'));
                $form->text('surname', '姓');
                $form->text('name', '名');
                $form->radio('sex', '称谓')->options(['0' => '先生', '1' => '女士']);
                $form->text('company', '公司名称');
                $form->text('section', '部门');
                $form->text('position', '职位');
                $form->fieldset('所在城市', function (Form $form) {
                    $form->select('prov', '省')->options(CityPackage::selectShow())->load('city',
                        '/admin/api/city');
        
                    $form->select('city', '市')->options(function ($id) {
                        $parentId = CityPackage::where('serial_no', $id)->value('parent_id');
            
                        return CityPackage::selectShowChild($parentId);
                    })->load('area',
                        '/admin/api/city');
        
                    $form->select('area', '区')->options(function ($id) {
                        $parentId = CityPackage::where('serial_no', $id)->value('parent_id');
            
                        return CityPackage::selectShowChild($parentId);
                    });
                });
                $form->textarea('address', '详细地址');
                $form->divider();
                $form->text('zip_code', '邮编');
                $form->text('land_line', '座机电话');
                $form->text('fax', '传真号');
                $form->email('email', '邮箱');
                $form->url('website', '公司网址');
    
            })->tab('问卷调查', function ($form)  {
                $form->fieldset('选择行业', function (Form $form)  {
                    $form->select('industry_id', '行业')->options(Industry::selectShow())->load('industry_option_id',
                        '/admin/api/industry');
                    $form->select('industry_option_id', '行业选项')->options(function ($id){
                        $parentId = Industry::where('id',$id)->value('parent_id');
                        return Industry::selectShowChild($parentId);
                    });
                });
            });
            
            return $form;
        }
    }
